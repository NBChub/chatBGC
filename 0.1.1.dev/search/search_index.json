{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"home","text":""},{"location":"#chatbgc","title":"chatBGC","text":"<p>Ask questions about biosynthetic gene clusters in your genome dataset via LLMs using Retrieval-Augmented Generation.</p> <ul> <li>Free software: MIT</li> <li>Documentation: https://nbchub.github.io/chatBGC/</li> </ul>"},{"location":"#configuration","title":"Configuration","text":"<p>Before running chatBGC, you need to configure the language model platform you want to use: <code>Ollama</code> or <code>OpenAI Chat</code>.</p>"},{"location":"#ollama","title":"Ollama","text":"<p>If you're using Ollama, make sure you have it running as described in the Installation section.</p>"},{"location":"#openai-chat","title":"OpenAI Chat","text":"<p>If you're using OpenAI Chat, you need to set up an API key:</p> <ol> <li>Sign up for an account on the OpenAI website.</li> <li>Navigate to the API section and generate a new API key.</li> <li> <p>Set the API key as an environment variable on your system:</p> <pre><code>export OPENAI_API_KEY=\"your-api-key\"\n</code></pre> </li> </ol> <p>Replace <code>\"your-api-key\"</code> with the API key you generated on the OpenAI website.</p>"},{"location":"#installation","title":"Installation","text":"<p>Follow these steps to install and run chatBGC:</p> <ol> <li> <p>Set up Ollama (Skip this step if you are using <code>OpenAI Chat</code>)</p> <p>Ollama is the default prerequisite for chatBGC. If you haven't installed it yet, you can do so using Docker:</p> <pre><code>docker stop ollama\ndocker rm ollama\ndocker run -d -v ollama:/root/.ollama -p 11434:11434 --name ollama ollama/ollama\ndocker exec -it ollama ollama run duckdb-nsql\n</code></pre> </li> <li> <p>Clone and install chatBGC</p> <p>Clone the chatBGC repository, navigate to the repository directory, and install the package using pip:</p> <pre><code>git clone https://github.com/NBChub/chatBGC.git\ncd chatBGC\npip install -e .\n</code></pre> </li> </ol>"},{"location":"#features","title":"Features","text":"<ul> <li>Command-line interface for asking questions about biosynthetic gene clusters in your genome collection via LLMs using Retrieval-Augmented Generation (RAG).</li> <li>Connects to a DuckDB database using the vanna.ai library and starts a Flask app.</li> </ul>"},{"location":"#usage","title":"Usage","text":"<p>Before running the chatBGC app, run the training using the given database first. You need to only do this once.</p> <pre><code>chatbgc train &lt;path_to_duckdb&gt;\n</code></pre> <p>To start the chatBGC tool, use the following command:</p> <pre><code>chatbgc run &lt;path_to_duckdb&gt;\n</code></pre>"},{"location":"#credits","title":"Credits","text":"<p>This package was created with the ppw tool. For more information, please visit the project page.</p>"},{"location":"api/","title":"modules","text":"<p>Top-level package for chatBGC.</p>"},{"location":"authors/","title":"authors","text":""},{"location":"authors/#credits","title":"Credits","text":""},{"location":"authors/#development-lead","title":"Development Lead","text":"<ul> <li>Matin Nuhamunada matinnu@biosustain.dtu.dk</li> </ul>"},{"location":"authors/#contributors","title":"Contributors","text":"<p>None yet. Why not be the first?</p>"},{"location":"contributing/","title":"contributing","text":""},{"location":"contributing/#contributing","title":"Contributing","text":"<p>Contributions are welcome, and they are greatly appreciated! Every little bit helps, and credit will always be given.</p> <p>You can contribute in many ways:</p>"},{"location":"contributing/#types-of-contributions","title":"Types of Contributions","text":""},{"location":"contributing/#report-bugs","title":"Report Bugs","text":"<p>Report bugs at https://github.com/NBChub/chatBGC/issues.</p> <p>If you are reporting a bug, please include:</p> <ul> <li>Your operating system name and version.</li> <li>Any details about your local setup that might be helpful in troubleshooting.</li> <li>Detailed steps to reproduce the bug.</li> </ul>"},{"location":"contributing/#fix-bugs","title":"Fix Bugs","text":"<p>Look through the GitHub issues for bugs. Anything tagged with \"bug\" and \"help wanted\" is open to whoever wants to implement it.</p>"},{"location":"contributing/#implement-features","title":"Implement Features","text":"<p>Look through the GitHub issues for features. Anything tagged with \"enhancement\" and \"help wanted\" is open to whoever wants to implement it.</p>"},{"location":"contributing/#write-documentation","title":"Write Documentation","text":"<p>chatBGC could always use more documentation, whether as part of the official chatBGC docs, in docstrings, or even on the web in blog posts, articles, and such.</p>"},{"location":"contributing/#submit-feedback","title":"Submit Feedback","text":"<p>The best way to send feedback is to file an issue at https://github.com/NBChub/chatBGC/issues.</p> <p>If you are proposing a feature:</p> <ul> <li>Explain in detail how it would work.</li> <li>Keep the scope as narrow as possible, to make it easier to implement.</li> <li>Remember that this is a volunteer-driven project, and that contributions   are welcome :)</li> </ul>"},{"location":"contributing/#get-started","title":"Get Started!","text":"<p>Ready to contribute? Here's how to set up <code>chatbgc</code> for local development.</p> <ol> <li>Fork the <code>chatbgc</code> repo on GitHub.</li> <li>Clone your fork locally</li> </ol> <pre><code>    $ git clone git@github.com:your_name_here/chatbgc.git\n</code></pre> <ol> <li>Ensure poetry is installed.</li> <li>Install dependencies and start your virtualenv:</li> </ol> <pre><code>    $ poetry install -E test -E doc -E dev\n</code></pre> <ol> <li>Create a branch for local development:</li> </ol> <pre><code>    $ git checkout -b name-of-your-bugfix-or-feature\n</code></pre> <p>Now you can make your changes locally.</p> <ol> <li>When you're done making changes, check that your changes pass the    tests, including testing other Python versions, with tox:</li> </ol> <pre><code>    $ tox\n</code></pre> <ol> <li>Commit your changes and push your branch to GitHub:</li> </ol> <pre><code>    $ git add .\n    $ git commit -m \"Your detailed description of your changes.\"\n    $ git push origin name-of-your-bugfix-or-feature\n</code></pre> <ol> <li>Submit a pull request through the GitHub website.</li> </ol>"},{"location":"contributing/#pull-request-guidelines","title":"Pull Request Guidelines","text":"<p>Before you submit a pull request, check that it meets these guidelines:</p> <ol> <li>The pull request should include tests.</li> <li>If the pull request adds functionality, the docs should be updated. Put    your new functionality into a function with a docstring, and add the    feature to the list in README.md.</li> <li>The pull request should work for Python 3.6, 3.7, 3.8, 3.9 and for PyPy. Check    https://github.com/NBChub/chatBGC/actions    and make sure that the tests pass for all supported Python versions.</li> </ol>"},{"location":"contributing/#tips","title":"Tips```","text":"<pre><code>$ pytest tests.test_chatbgc\n</code></pre> <p>```To run a subset of tests.</p>"},{"location":"contributing/#deploying","title":"Deploying","text":"<p>A reminder for the maintainers on how to deploy. Make sure all your changes are committed (including an entry in HISTORY.md). Then run:</p> <pre><code>$ poetry patch # possible: major / minor / patch\n$ git push\n$ git push --tags\n</code></pre> <p>Github Actions will then deploy to PyPI if tests pass.</p>"},{"location":"history/","title":"history","text":""},{"location":"history/#history","title":"History","text":""},{"location":"history/#010-2024-04-18","title":"0.1.0 (2024-04-18)","text":"<ul> <li>First release on PyPI.</li> </ul>"},{"location":"installation/","title":"installation","text":""},{"location":"installation/#installation","title":"Installation","text":""},{"location":"installation/#stable-release","title":"Stable release","text":"<p>To install chatBGC, run this command in your terminal:</p> <pre><code>pip install chatbgc\n</code></pre> <p>This is the preferred method to install chatBGC, as it will always install the most recent stable release.</p> <p>If you don't have pip installed, this Python installation guide can guide you through the process.</p>"},{"location":"installation/#from-source","title":"From source","text":"<p>The source for chatBGC can be downloaded from the Github repo[https://github.com/NBChub/chatBGC].</p> <p>You can either clone the public repository:</p> <pre><code>git clone git@github.com:NBChub/chatBGC.git\n</code></pre> <p>Or download the tarball:</p> <pre><code>curl -OJL https://github.com/NBChub/chatBGC/tarball/main\n</code></pre> <p>Once you have a copy of the source, you can install it with:</p> <pre><code>pip install .\n</code></pre>"},{"location":"usage/","title":"usage","text":""},{"location":"usage/#usage","title":"Usage","text":"<p>To use chatBGC in a project</p> <pre><code>    import chatbgc\n</code></pre>"}]}